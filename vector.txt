
벡터(vector)란?
- 수학에서의 벡터
    - 크기와 방향을 가진 양을 의미
    - 좌표로 나타내면 (x1,x2,x3 ... xn) 처럼 원소들이 한 줄로 나열된 것
- 프로그래밍에서의 벡터
    - 1차원 배열로 표현 (넘파이)
    - 1차원 배열에서 index 로 각 성분에 접근 가능 v[0], v[1]..
- 벡터 검색
    - 데이터를 숫자 벡터로 변환하고 숫자간의 유사도를 계산해서 가장 비슷한것을 찾는다.
    - 왜 벡터로 변환하는지?
        - 텍스트,이미지,오디오같이 비교하기 어려운 데이터들을 수치화(임베딩) 하면 컴퓨터가 거리(distance) 로 비교 가능
    - 과정
        - 1. 임베딩 생성 : 모델로 원본 데이터를 벡터화
        - 2. 벡터 DB 저장
        - 3. 쿼리를 벡터화 (사용자가 입력한 특정 사진 등..) 
        - 4. 거리 계산 : 코사인 유사도(Cosine similarity), 유클리드 거리(Euclidean distance), 내적(Dot product) 등등..
        - 5. 가까운 순서로 정렬
    - 일반 검색과의 차이
        - 일반 검색은 문자 일치 여부를 따지지만 벡터 검색은 의미의 유사도를 따진다. (고양이 <-> 냥이 <-> cat 도 매칭)
        - 임베딩 생성,저장,거리계산의 비용 필요
        - 데이터가 많고, 유사도 계산 최적화를 잘 해놓은 경우 일반 검색보다 빠르다
    - LLM RAG, 추천시스템, 이미지 검색, 음성/영상 검색 등에 사용

- 벡터 검색이 왜 빠른가?
    - 전수 비교를 피하는 구조로 되어있음 (전수비교:모든 데이터를 하나하나 확인하는것)
    - 인덱스 구조가 다르다
        - 근사 최근접 탐색 (ANN) 인덱스 사용 -> 고차원 공간을 쪼개서 비슷한 후보만 비교함
    - 키워드 검색은 IO 지만 벡터 검색은 CPU/GPU 의 벡터 연산으로 거리계산을 병렬 처리함

- RAG 파이프라인에서 벡터검색
    - 1. 문서 chunking 해서 10% 정도 오버랩되도록하고 각 청크에 source,page,section 같은 메타데이터 붙이기
    - 2. 임베딩 생성 & 인덱스 빌드 (각 청크를 임베딩 벡터로 변환 -> 벡터 인덱스 저장 )
    - 3. 사용자 질문을 동일한 임베딩 모델로 벡터화 -> 인덱스에서 Top-K 후보를 검색
